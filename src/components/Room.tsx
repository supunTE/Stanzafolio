/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { GLTFResult } from "./model-types";
import ModelMesh from "./ModelMesh";
import { ModelGroup } from "./ModelGroup";
import { useRef, useState } from "react";
import { Mesh } from "three";
import { useFrame } from "@react-three/fiber";
import { useSpring } from "@react-spring/three";

export function RoomModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF("/room.glb") as GLTFResult;

  const fanBladesRef = useRef<Mesh>();
  const [fanBladeSpeedMultiplier, setFanBladeSpeedMultiplier] = useState(1);
  const { springBladeMultiplier } = useSpring({
    springBladeMultiplier: fanBladeSpeedMultiplier,
    config: {
      duration: 1000,
    },
  });

  useFrame(() => {
    if (!fanBladesRef.current) return;
    fanBladesRef.current.rotation.z += 0.06 * springBladeMultiplier.get();
  });

  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <ModelGroup
          meshes={[
            {
              name: "Room",
              nodes: nodes.Room,
              hoverColor: "#FFFF61",
              hoverContent: "It's just the wall and floor. ðŸ§±",
            },
            {
              name: "Tiles",
              nodes: nodes.Tiles,
              hoverColor: "#010112",
            },
          ]}
        />
        <mesh
          name="Bulb_Wire"
          castShadow
          receiveShadow
          geometry={nodes.Bulb_Wire.geometry}
          material={nodes.Bulb_Wire.material}
          position={[0.15, 8.242, 0.15]}
          scale={[0.008, 0.046, 0.008]}
        />
        <mesh
          name="Bulb"
          castShadow
          receiveShadow
          geometry={nodes.Bulb.geometry}
          material={nodes.Bulb.material}
          position={[0.15, 6.323, 0.15]}
          scale={3.531}
        />
        <mesh
          name="Bulb_Holder"
          castShadow
          receiveShadow
          geometry={nodes.Bulb_Holder.geometry}
          material={nodes.Bulb_Holder.material}
          position={[0.15, 6.391, 0.15]}
        />
        <ModelGroup
          meshes={[
            {
              name: "Bed_Frame",
              nodes: nodes.Bed_Frame,
              hoverColor: "#7F4B4B",
              position: [1.984, 1.317, -2.7],
            },
            {
              name: "Bed_Sheet",
              nodes: nodes.Bed_Sheet,
              hoverColor: "#7aadff",
              hoverContent:
                "Smart developers recharge with a day-time sleep. ðŸŒž",
              position: [2.342, 2.906, -0.509],
            },
            {
              name: "Bed_Pillow",
              nodes: nodes.Bed_Pillow,
              hoverColor: "#C3C5FF",
              position: [2.479, 3.042, -0.48],
            },
            {
              name: "Bed_Pillow_Small",
              nodes: nodes.Bed_Pillow_Small,
              hoverColor: "#C3C5FF",
              position: [1.433, 3.59, 1.151],
              rotation: [-Math.PI, 1.299, -Math.PI],
              scale: [0.571, 0.853, 0.571],
            },
            {
              name: "Phone",
              nodes: nodes.Phone,
              hoverColor: "#2B2B2B",
              position: [2.479, 1.758, 0.909],
            },
          ]}
        />
        <mesh
          name="Fan_Brain"
          castShadow
          receiveShadow
          geometry={nodes.Fan_Brain.geometry}
          material={nodes.Fan_Brain.material}
          position={[2.714, 3.114, 2.568]}
          rotation={[Math.PI / 2, 0, 0.219]}
        >
          <mesh
            name="Blades"
            ref={fanBladesRef}
            castShadow
            receiveShadow
            geometry={nodes.Blades.geometry}
            material={nodes.Blades.material}
            position={[0, -0.257, -0.482]}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <mesh
            name="Cylinder"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder.geometry}
            material={nodes.Cylinder.material}
            position={[0, -0.257, -0.475]}
          />
          <mesh
            name="Cylinder002"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder002.geometry}
            material={nodes.Cylinder002.material}
            position={[0, -0.257, -0.475]}
          />
        </mesh>
        <group
          name="Empty002"
          position={[3.145, 2.597, 3.136]}
          rotation={[0, 0, -2.094]}
        />
        <mesh
          name="Cube022"
          castShadow
          receiveShadow
          geometry={nodes.Cube022.geometry}
          material={nodes.Cube022.material}
          position={[2.69, 3.06, 2.674]}
          rotation={[0, -0.219, 0]}
        >
          <mesh
            name="Cube021"
            castShadow
            receiveShadow
            geometry={nodes.Cube021.geometry}
            material={nodes.Cube021.material}
            position={[0, -2.266, 0.004]}
          />
          <mesh
            name="Cylinder007"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder007.geometry}
            material={nodes.Cylinder007.material}
            position={[0.046, -0.008, 0.017]}
            rotation={[0, 0, -Math.PI / 2]}
            scale={[0.005, 0.002, 0.005]}
          />
          <mesh
            name="Plate"
            castShadow
            receiveShadow
            geometry={nodes.Plate.geometry}
            material={nodes.Plate.material}
            position={[0.001, -1.057, -0.08]}
          >
            <ModelMesh
              name="Btn_1"
              nodes={nodes.Btn_1}
              hoverColor="#57B7FF"
              position={[0.004, -0.032, -0.014]}
              rotation={[0.018, 0, -Math.PI]}
              onClick={() => {
                setFanBladeSpeedMultiplier(1);
              }}
            />
            <ModelMesh
              name="Btn_2"
              nodes={nodes.Btn_2}
              hoverColor="#575CFF"
              position={[0.004, -0.032, -0.014]}
              rotation={[0.018, 0, -Math.PI]}
              onClick={() => {
                setFanBladeSpeedMultiplier(2);
              }}
            />
            <ModelMesh
              name="Btn_3"
              nodes={nodes.Btn_3}
              hoverColor="#FF576D"
              position={[0.004, -0.032, -0.014]}
              rotation={[0.018, 0, -Math.PI]}
              onClick={() => {
                setFanBladeSpeedMultiplier(3);
              }}
            />
            <ModelMesh
              name="Btn_Off"
              nodes={nodes.Btn_Off}
              hoverColor="#7C7C7C"
              position={[0.004, -0.032, -0.014]}
              rotation={[0.018, 0, -Math.PI]}
              onClick={() => {
                setFanBladeSpeedMultiplier(0);
              }}
            />
            <mesh
              name="Knob_hole"
              castShadow
              receiveShadow
              geometry={nodes.Knob_hole.geometry}
              material={nodes.Knob_hole.material}
              position={[0, 0.104, -0.005]}
              rotation={[-1.484, 0, -Math.PI]}
            >
              <mesh
                name="knob"
                castShadow
                receiveShadow
                geometry={nodes.knob.geometry}
                material={nodes.knob.material}
                scale={[1.243, 0.295, 1.243]}
              />
            </mesh>
          </mesh>
          <mesh
            name="Sphere"
            castShadow
            receiveShadow
            geometry={nodes.Sphere.geometry}
            material={nodes.Sphere.material}
            position={[0, -2.538, 0.004]}
            rotation={[0, Math.PI / 4, 0]}
          >
            <group
              name="Empty003"
              position={[0, -0.001, 0]}
              rotation={[0, 1.571, 0]}
            />
          </mesh>
        </mesh>
        <mesh
          name="Table"
          castShadow
          receiveShadow
          geometry={nodes.Table.geometry}
          material={nodes.Table.material}
          position={[0.044, 0, 0.783]}
        />
        <group name="Empty" position={[-2.955, 2.05, 2.004]} />
        <mesh
          name="Cup"
          castShadow
          receiveShadow
          geometry={nodes.Cup.geometry}
          material={nodes.Cup.material}
          position={[-2.692, 2.05, 3.406]}
          scale={0.078}
        />
        <mesh
          name="CupHold"
          castShadow
          receiveShadow
          geometry={nodes.CupHold.geometry}
          material={nodes.CupHold.material}
          position={[-2.692, 2.05, 3.406]}
          scale={0.111}
        />
        <mesh
          name="Table_LED"
          castShadow
          receiveShadow
          geometry={nodes.Table_LED.geometry}
          material={nodes.Table_LED.material}
        />
        <mesh
          name="Monitor"
          castShadow
          receiveShadow
          geometry={nodes.Monitor.geometry}
          material={nodes.Monitor.material}
          position={[-3.22, 2.848, 2.971]}
          rotation={[0, 0.398, 0]}
        >
          <mesh
            name="Cube002"
            castShadow
            receiveShadow
            geometry={nodes.Cube002.geometry}
            material={nodes.Cube002.material}
            position={[-0.138, 0, 0]}
            scale={[0.022, 0.067, 0.067]}
          />
        </mesh>
        <mesh
          name="Keyboard"
          castShadow
          receiveShadow
          geometry={nodes.Keyboard.geometry}
          material={nodes.Keyboard.material}
          position={[-2.737, 2.074, 2.217]}
          rotation={[0, 0.141, 0]}
        />
        <mesh
          name="Mouse"
          castShadow
          receiveShadow
          geometry={nodes.Mouse.geometry}
          material={nodes.Mouse.material}
          position={[-2.737, 2.075, 1.295]}
          scale={[0.088, 0.021, 0.055]}
        >
          <mesh
            name="Mouse_Wheel"
            castShadow
            receiveShadow
            geometry={nodes.Mouse_Wheel.geometry}
            material={nodes.Mouse_Wheel.material}
            position={[-0.456, 0.207, 0]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[0.156, 0.046, 0.636]}
          />
        </mesh>
        <mesh
          name="Mouse_Pad"
          castShadow
          receiveShadow
          geometry={nodes.Mouse_Pad.geometry}
          material={nodes.Mouse_Pad.material}
          position={[-2.67, 2.053, 1.2]}
          scale={[0.257, 0.257, 0.392]}
        />
        <mesh
          name="Speaker_A"
          castShadow
          receiveShadow
          geometry={nodes.Speaker_A.geometry}
          material={nodes.Speaker_A.material}
          position={[-3.239, 2.164, 3.556]}
          rotation={[0, 0.542, 0]}
          scale={[0.085, 0.114, 0.102]}
        >
          <mesh
            name="Cube023"
            castShadow
            receiveShadow
            geometry={nodes.Cube023.geometry}
            material={nodes.Cube023.material}
            position={[0.904, -0.7, 0.599]}
            rotation={[0, 0, 0.25]}
            scale={[0.987, 1.022, 1]}
          />
          <mesh
            name="Cube030"
            castShadow
            receiveShadow
            geometry={nodes.Cube030.geometry}
            material={nodes.Cube030.material}
            position={[0.904, -0.7, 0.316]}
            rotation={[0, 0, 0.25]}
            scale={[0.987, 1.022, 1]}
          />
          <mesh
            name="Cube031"
            castShadow
            receiveShadow
            geometry={nodes.Cube031.geometry}
            material={nodes.Cube031.material}
            position={[0.947, -0.692, 0.091]}
            rotation={[0, 0, 0.25]}
            scale={[0.115, 0.259, 0.253]}
          />
        </mesh>
        <mesh
          name="CPU"
          castShadow
          receiveShadow
          geometry={nodes.CPU.geometry}
          material={nodes.CPU.material}
          position={[-2.955, 1.008, 3.21]}
          scale={[0.611, 0.558, 0.322]}
        />
        <mesh
          name="Speaker_B"
          castShadow
          receiveShadow
          geometry={nodes.Speaker_B.geometry}
          material={nodes.Speaker_B.material}
          position={[-3.535, 2.164, 1.459]}
          rotation={[0, -0.315, 0]}
          scale={[0.085, 0.114, 0.102]}
        >
          <mesh
            name="Cube033"
            castShadow
            receiveShadow
            geometry={nodes.Cube033.geometry}
            material={nodes.Cube033.material}
            position={[0.904, -0.7, 0.599]}
            rotation={[0, 0, 0.25]}
            scale={[0.987, 1.022, 1]}
          />
          <mesh
            name="Cube034"
            castShadow
            receiveShadow
            geometry={nodes.Cube034.geometry}
            material={nodes.Cube034.material}
            position={[0.904, -0.7, 0.316]}
            rotation={[0, 0, 0.25]}
            scale={[0.987, 1.022, 1]}
          />
          <mesh
            name="Cube035"
            castShadow
            receiveShadow
            geometry={nodes.Cube035.geometry}
            material={nodes.Cube035.material}
            position={[0.947, -0.692, 0.091]}
            rotation={[0, 0, 0.25]}
            scale={[0.115, 0.259, 0.253]}
          />
        </mesh>
        <mesh
          name="Touch_Grass"
          castShadow
          receiveShadow
          geometry={nodes.Touch_Grass.geometry}
          material={nodes.Touch_Grass.material}
          position={[-2.955, 0.512, 1.681]}
          rotation={[0, Math.PI / 2, 0]}
          scale={0.366}
        />
        <mesh
          name="Mat_Plain"
          castShadow
          receiveShadow
          geometry={nodes.Mat_Plain.geometry}
          material={nodes.Mat_Plain.material}
          position={[-2.955, 0.475, 1.681]}
        />
        <mesh
          name="Mat_Grass"
          castShadow
          receiveShadow
          geometry={nodes.Mat_Grass.geometry}
          material={nodes.Mat_Grass.material}
        />
        <mesh
          name="Chair_Back"
          castShadow
          receiveShadow
          geometry={nodes.Chair_Back.geometry}
          material={nodes.Chair_Back.material}
          position={[-0.707, 1.979, 1.904]}
          rotation={[0, 0, -0.103]}
        >
          <mesh
            name="Chair_Cusion_Bottom"
            castShadow
            receiveShadow
            geometry={nodes.Chair_Cusion_Bottom.geometry}
            material={nodes.Chair_Cusion_Bottom.material}
            position={[-0.56, -0.569, 0]}
            rotation={[1.571, -1.468, 1.571]}
          >
            <mesh
              name="Chair_Bottom_Cyllinder"
              castShadow
              receiveShadow
              geometry={nodes.Chair_Bottom_Cyllinder.geometry}
              material={nodes.Chair_Bottom_Cyllinder.material}
              position={[0, -0.246, -0.152]}
              rotation={[0, 1.571, 0]}
            >
              <mesh
                name="Chair_Wheels"
                castShadow
                receiveShadow
                geometry={nodes.Chair_Wheels.geometry}
                material={nodes.Chair_Wheels.material}
                position={[0, -0.447, 0]}
                rotation={[0, -1.257, 0]}
              />
            </mesh>
            <mesh
              name="Chair_Handle_Stands"
              castShadow
              receiveShadow
              geometry={nodes.Chair_Handle_Stands.geometry}
              material={nodes.Chair_Handle_Stands.material}
              position={[0.061, 0, 0]}
            />
            <mesh
              name="Chair_Handles"
              castShadow
              receiveShadow
              geometry={nodes.Chair_Handles.geometry}
              material={nodes.Chair_Handles.material}
              position={[-0.79, 0.329, 0.032]}
              rotation={[-Math.PI, -1.571, 0]}
            />
            <mesh
              name="Chair_Plate"
              castShadow
              receiveShadow
              geometry={nodes.Chair_Plate.geometry}
              material={nodes.Chair_Plate.material}
              position={[0, -0.149, -0.152]}
              rotation={[0, 1.571, 0]}
              scale={0.268}
            />
          </mesh>
          <mesh
            name="Chair_Pillow_Bottom"
            castShadow
            receiveShadow
            geometry={nodes.Chair_Pillow_Bottom.geometry}
            material={nodes.Chair_Pillow_Bottom.material}
            position={[0.089, 1.324, 0]}
            rotation={[-Math.PI, 0, -3.062]}
          />
          <mesh
            name="Chair_Pillow_Top"
            castShadow
            receiveShadow
            geometry={nodes.Chair_Pillow_Top.geometry}
            material={nodes.Chair_Pillow_Top.material}
            position={[-0.118, -0.299, 0]}
            rotation={[0, 0, -0.37]}
          />
        </mesh>
        <mesh
          name="Cupboard_Frame"
          castShadow
          receiveShadow
          geometry={nodes.Cupboard_Frame.geometry}
          material={nodes.Cupboard_Frame.material}
          position={[-1.186, 3.455, -3.061]}
        />
        <mesh
          name="Cupboard_Dors"
          castShadow
          receiveShadow
          geometry={nodes.Cupboard_Dors.geometry}
          material={nodes.Cupboard_Dors.material}
          position={[-2.705, 3.206, -2.399]}
        />
        <mesh
          name="Cupboard_Key_Hole"
          castShadow
          receiveShadow
          geometry={nodes.Cupboard_Key_Hole.geometry}
          material={nodes.Cupboard_Key_Hole.material}
          position={[-1.038, 2.585, -2.399]}
        />
        <mesh
          name="Cupboard_Key"
          castShadow
          receiveShadow
          geometry={nodes.Cupboard_Key.geometry}
          material={nodes.Cupboard_Key.material}
          position={[-1.038, 2.585, -2.398]}
          scale={[0.842, 0.95, 1.292]}
        />
        <mesh
          name="Cupboard_Legs"
          castShadow
          receiveShadow
          geometry={nodes.Cupboard_Legs.geometry}
          material={nodes.Cupboard_Legs.material}
          position={[-1.186, 3.455, -3.061]}
        />
        <group name="Empty001" position={[-1.186, 3.455, -3.061]} />
      </group>
    </group>
  );
}

useGLTF.preload("/room.glb");
